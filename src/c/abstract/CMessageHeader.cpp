#include <MailCore/MCCore.h>
#include "CMessageHeader.h"
#include "CBase+Private.h"

#define nativeType mailcore::MessageHeader
#define structName CMessageHeader

C_SYNTHESIZE_STRING(setMessageID, messageID);
C_SYNTHESIZE_STRING(setUserAgent, userAgent);
C_SYNTHESIZE_STRING(setSubject, subject);
C_SYNTHESIZE_ARRAY(setReferences, references);
C_SYNTHESIZE_ARRAY(setInReplyTo, inReplyTo);
C_SYNTHESIZE_ARRAY(setTo, to);
C_SYNTHESIZE_ARRAY(setCc, cc);
C_SYNTHESIZE_ARRAY(setBcc, bcc);
C_SYNTHESIZE_ARRAY(setReplyTo, replyTo);
C_SYNTHESIZE_SCALAR(time_t, time_t, setReceivedDate, receivedDate);
C_SYNTHESIZE_SCALAR(time_t, time_t, setDate, date);
C_SYNTHESIZE_MAILCORE_OBJ(CAddress, CAddress_new, setSender, sender);
C_SYNTHESIZE_MAILCORE_OBJ(CAddress, CAddress_new, setFrom, from);
C_SYNTHESIZE_COBJECT_CAST()

C_SYNTHESIZE_CONSTRUCTOR()

CMessageHeader CMessageHeader_init(){
    return CMessageHeader_new(new mailcore::MessageHeader());
}

C_SYNTHESIZE_FUNC_WITH_SCALAR(bool, isMessageIDAutoGenerated)
C_SYNTHESIZE_FUNC_WITH_VOID(setExtraHeader, MailCoreString, MailCoreString)
C_SYNTHESIZE_FUNC_WITH_OBJ(MailCoreString, extraHeaderValueForName, MailCoreString)
C_SYNTHESIZE_FUNC_WITH_VOID(removeExtraHeader, MailCoreString)
C_SYNTHESIZE_FUNC_WITH_OBJ(CArray, allExtraHeadersNames)
C_SYNTHESIZE_FUNC_WITH_OBJ(MailCoreString, extractedSubject)
C_SYNTHESIZE_FUNC_WITH_OBJ(MailCoreString, partialExtractedSubject)
C_SYNTHESIZE_FUNC_WITH_VOID(importHeadersData, CData)
C_SYNTHESIZE_FUNC_WITH_OBJ(CMessageHeader, forwardHeader)

CMessageHeader CMessageHeader_replyHeaderWithExcludedRecipients(struct CMessageHeader self, CArray /* MCOAddress */excludedRecipients){
    return CMessageHeader_new(self.instance->replyHeader(false, excludedRecipients.instance));
}

struct CMessageHeader CMessageHeader_replyAllHeaderWithExcludedRecipients(struct CMessageHeader self, CArray /* MCOAddress */excludedRecipients){
    return CMessageHeader_new(self.instance->replyHeader(true, excludedRecipients.instance));
}











