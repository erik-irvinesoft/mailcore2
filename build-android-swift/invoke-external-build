#!/bin/bash
set -ex

build_version=4
package_name=mailcore2-android
ctemplate_build_version=2.2.3-readdle.1 # tag in https://github.com/readdle/ctemplate
libetpan_build_version=1.9.3-readdle.1 # tag in https://github.com/readdle/libetpan
cyrus_sasl_build_version=2.1.27 # source code hardcoded in https://github.com/readdle/libetpan/tree/master/build-mac/dependencies/packages
iconv_build_version=1.15 # version hardcoded in https://github.com/readdle/libetpan/blob/master/build-android/dependencies/iconv/build.sh
openssl_build_version=swift-toolchain # OpenSSL from swift toolchain

if ! which ndk-build > /dev/null ; then
  echo Android NDK should be installed and ndk-build in PATH
  exit 1
fi

build_dir=$SWIFT_PM_EXTERNAL_BUILD_ROOT

base_dir="$(realpath $(dirname $0))"
pushd "$base_dir"

    # download dependencies
    download_dir="$build_dir/third-party"
    mkdir -p "$download_dir"
    pushd "$download_dir"

        # Build libetpan-android from source
        if test ! -d "$download_dir/libetpan-android-$libetpan_build_version" ; then
            git clone --depth 1 --branch $libetpan_build_version git@github.com:readdle/libetpan.git
            pushd "libetpan/build-android"
                ./build.sh

                mv "libetpan-android-7.zip" "libetpan-android-$libetpan_build_version.zip" # Fix Legacy versioning
                mv "dependencies/cyrus-sasl/cyrus-sasl-android-4.zip" "dependencies/cyrus-sasl/cyrus-sasl-android-$cyrus_sasl_build_version.zip" # Fix Legacy versioning
                mv "dependencies/iconv/iconv-android-1.zip" "dependencies/iconv/iconv-android-$iconv_build_version.zip" # Fix Legacy versioning
                mv "dependencies/openssl/openssl-android-3.zip" "dependencies/openssl/openssl-android-$openssl_build_version.zip" # Fix Legacy versioning

                cp "libetpan-android-$libetpan_build_version.zip" "$download_dir/"
                cp "dependencies/cyrus-sasl/cyrus-sasl-android-$cyrus_sasl_build_version.zip" "$download_dir/"
                cp "dependencies/iconv/iconv-android-$iconv_build_version.zip" "$download_dir/"
                cp "dependencies/openssl/openssl-android-$openssl_build_version.zip" "$download_dir/"
            popd

            unzip "libetpan-android-$libetpan_build_version.zip"
            unzip "cyrus-sasl-android-$cyrus_sasl_build_version.zip"
            unzip "iconv-android-$iconv_build_version.zip"
            unzip "openssl-android-$openssl_build_version.zip"

            mv "libetpan-android-7" "libetpan-android-$libetpan_build_version" # Fix Legacy versioning
            mv "cyrus-sasl-android-4" "cyrus-sasl-android-$cyrus_sasl_build_version" # Fix Legacy versioning
            mv "iconv-android-1" "iconv-android-$iconv_build_version" # Fix Legacy versioning
            mv "openssl-android-3" "openssl-android-$openssl_build_version" # Fix Legacy versioning
        fi

        # Build ctemplate-android from source
        if test ! -d "$download_dir/ctemplate-android-$ctemplate_build_version" ; then
            git clone --depth 1 --branch $ctemplate_build_version https://github.com/readdle/ctemplate.git
            pushd "ctemplate/build-android"
                ./build.sh
                mv "ctemplate-android-3" "ctemplate-android-$ctemplate_build_version" # Fix Legacy versioning
                cp -R "ctemplate-android-$ctemplate_build_version" "$download_dir/"
            popd
        fi

        # Copy libetpan headers
        rsync -t -r "libetpan-android-$libetpan_build_version/include/libetpan" "$SWIFT_PM_EXTERNAL_INCLUDE"

    popd

    # Specify libs output
    export NDK_OUT="$build_dir/obj"
    export NDK_LIBS_OUT="$build_dir/libs"

    # collect public headers
    mkdir -p "cmake-build"
    pushd "cmake-build"
        cmake -D ANDROID=1 ../..
        rsync -t -r "src/include/MailCore" "$SWIFT_PM_EXTERNAL_INCLUDE"
    popd

    # build C/C++ to libcmailcore.so
    ndk-build -j 4 "$@" \
        CTEMPLATE_PATH="$download_dir/ctemplate-android-$ctemplate_build_version" \
        LIBETPAN_PATH="$download_dir/libetpan-android-$libetpan_build_version" \
        SWIFT_PM_EXTERNAL_LIBS=$SWIFT_PM_EXTERNAL_LIBS \
        SWIFT_PM_EXTERNAL_INCLUDE=$SWIFT_PM_EXTERNAL_INCLUDE \
        OPENSSL_PATH="$download_dir/openssl-android-$openssl_build_version" \
        CYRUS_SASL_PATH="$download_dir/cyrus-sasl-android-$cyrus_sasl_build_version" \
        ICONV_PATH="$download_dir/iconv-android-$iconv_build_version"

    # Copy all libraries
    archs="armeabi-v7a arm64-v8a x86 x86_64"
    for arch in $archs ; do
        TARGET_ARCH_ABI=$arch
        if (( $NDK_DEBUG == 1 ))
        then
        rsync -t -r "$NDK_OUT/local/$TARGET_ARCH_ABI" "$SWIFT_PM_EXTERNAL_LIBS"
        else
        rsync -t -r "$NDK_LIBS_OUT/$TARGET_ARCH_ABI" "$SWIFT_PM_EXTERNAL_LIBS"
        fi
    done

popd
