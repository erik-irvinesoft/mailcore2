#!/bin/bash

build_version=4
package_name=mailcore2-android
ctemplate_build_version=3
cyrus_sasl_build_version=4
libetpan_build_version=7
openssl_build_version=3
iconv_build_version=1

if ! which ndk-build > /dev/null ; then
  echo Android NDK should be installed and ndk-build in PATH
  exit 1
fi

function download_dep {
    local name="$1"
    local version="$2"

    if test ! -d "$name-$version"; then 
        if test ! -f "$name-$version.zip" ; then
            if curl -f -O "http://d.etpan.org/mailcore2-deps/$name/$name-$version.zip" ; then
                echo "Downloaded $name-$version.zip"
            else
                echo Could not download $name-$version.zip
                exit 1
            fi
        fi
        unzip "$name-$version.zip"
    fi
}

function download_dep_from_github {
    local name="$1"
    local version="$2"
    local url="$3"

    if test ! -d "$name-$version"; then
        if test ! -f "$name-$version.zip" ; then
            if curl -f -LO "$url/$name-$version.zip" ; then
                echo "Downloaded $name-$version.zip"
            else
                echo Could not download $name-$version.zip
                exit 1
            fi
        fi
        unzip "$name-$version.zip"
    fi
}

function clone_from_git {
    local name="$1"
    local url="$2"

    if test ! -d "$name"; then
    	git clone $url
    fi
}


# Todo: compute this path on swift-android-buildtools side
swift_pm_root=$(dirname $(dirname $SWIFT_PM_BUILD_DIR))
build_dir="$swift_pm_root/external-build/mailcore2"
mkdir -p $build_dir

# Specify libs output
export NDK_OUT="$build_dir/obj"
export NDK_LIBS_OUT="$build_dir/libs"

base_dir="$(realpath $(dirname $0))"
pushd "$base_dir"
    # collect public headers
    mkdir -p "cmake-build"
    pushd "cmake-build"
        cmake -D ANDROID=1 ../..
        rsync -t -r "src/include/MailCore" "$SWIFT_PM_EXTERNAL_INCLUDE"
    popd


    # download dependencies
    download_dir="$build_dir/third-party"
    mkdir -p "$download_dir"
    pushd "$download_dir"
        download_dep_from_github "libetpan-android" $libetpan_build_version "https://github.com/readdle/libetpan-android-zip/raw/master/"
        download_dep_from_github "iconv-android" $iconv_build_version "https://github.com/readdle/libetpan-android-zip/raw/master/"
        clone_from_git "swift-tidyhtml5-prebuilt" "https://git.readdle.com/android/swift-tidyhtml5-prebuilt"
        download_dep "openssl-android" $openssl_build_version
        download_dep "cyrus-sasl-android" $cyrus_sasl_build_version

        # Build ctemplate-android from source
        if test ! -d "$download_dir/ctemplate-android-$ctemplate_build_version" ; then
            git clone --depth 1 --branch master https://github.com/andriydruk/ctemplate.git
            pushd "ctemplate/build-android"
                sh build.sh
                cp -R "ctemplate-android-$ctemplate_build_version" "$download_dir/"
            popd
        fi

        # Copy libetpan headers
        rsync -t -r "libetpan-android-$libetpan_build_version/include/libetpan" "$SWIFT_PM_EXTERNAL_INCLUDE"

    popd

    # build C/C++ to libcmailcore.so
    ndk-build -j 4 "$@" \
        CTEMPLATE_PATH="$download_dir/ctemplate-android-$ctemplate_build_version" \
        LIBETPAN_PATH="$download_dir/libetpan-android-$libetpan_build_version" \
        TIDY_HTML5_PATH="$download_dir/swift-tidyhtml5-prebuilt" \
        OPENSSL_PATH="$download_dir/openssl-android-$openssl_build_version" \
        CYRUS_SASL_PATH="$download_dir/cyrus-sasl-android-$cyrus_sasl_build_version" \
        ICONV_PATH="$download_dir/iconv-android-$iconv_build_version"

    # Copy all libraries
    rsync -t -r "$NDK_LIBS_OUT/armeabi-v7a" "$SWIFT_PM_EXTERNAL_LIBS"
popd
